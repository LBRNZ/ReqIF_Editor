<Window x:Class="ReqIF_Editor.SpecObjectViewerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReqIF_Editor"
        xmlns:reqif="clr-namespace:ReqIFSharp;assembly=ReqIFSharp_PlusObjects"
        xmlns:smith="clr-namespace:Smith.WPF.HtmlEditor;assembly=HtmlEditorWPF"
        xmlns:wpftool="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="{DynamicResource editRequirement}" Height="650" MinWidth="835" Width="835" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <local:XHTMLConverter x:Key="XHTMLConverter"/>
        <local:AttributeEditableConverter x:Key="AttributeEditableConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <DataGrid x:Name="DataTable"
                  Grid.Row="0"
                  AutoGenerateColumns="False"
                  HorizontalGridLinesBrush="Gray"
                  VerticalGridLinesBrush="Gray">
            <DataGrid.Columns>
                <DataGridTextColumn Header="{DynamicResource attributes}" Binding="{Binding AttributeDefinition.LongName}" FontSize="14" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="TextBlock.TextAlignment" Value="Justify" />
                            <Setter Property="TextBlock.FontWeight" Value="Bold" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="{DynamicResource values}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentPresenter Content="{Binding Path=.}">
                                <ContentPresenter.Resources>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueXHTML}">
                                        <smith:HtmlEditor HorizontalAlignment="Left" 
                                                          BindingContent="{Binding ObjectValue, Converter={StaticResource XHTMLConverter}, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                          IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}"
                                                          FontFamilyListVisibility="Collapsed"
                                                          FontSizeListVisibility="Collapsed"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueEnumeration}">
                                        <ListBox HorizontalAlignment="Left"
                                                 ItemsSource="{Binding Definition.DatatypeDefinition.SpecifiedValues}"
                                                 SelectedItem="{Binding ObjectValue[0], Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                 IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock HorizontalAlignment="Left" Text="{Binding LongName}"/>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueBoolean}">
                                        <CheckBox HorizontalAlignment="Left"
                                                  IsChecked="{Binding ObjectValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                  IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueDate}">
                                        <wpftool:DateTimePicker HorizontalAlignment="Left"
                                                                Value="{Binding ObjectValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                                IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueInteger}">
                                        <wpftool:LongUpDown HorizontalAlignment="Stretch"
                                                            Value="{Binding ObjectValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                            Maximum="{Binding Definition.DatatypeDefinition.Max}"
                                                            Minimum="{Binding Definition.DatatypeDefinition.Min}"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueReal}">
                                        <wpftool:DoubleUpDown HorizontalAlignment="Left"
                                                            Value="{Binding ObjectValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                            Maximum="{Binding Definition.DatatypeDefinition.Max}"
                                                            Minimum="{Binding Definition.DatatypeDefinition.Min}"
                                                            IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type reqif:AttributeValueString}">
                                        <TextBox HorizontalAlignment="Stretch"
                                                 Text="{Binding ObjectValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                 BorderBrush="{x:Null}"
                                                 IsEnabled="{Binding AttributeDefinition.IsEditable, Converter={StaticResource AttributeEditableConverter}}"/>
                                    </DataTemplate>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"/>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style> 
            </DataGrid.Resources>
        </DataGrid>
        <DockPanel Grid.Row="1" LastChildFill="False">
            <Button x:Name="AddSpecObject_Button"
                    Height="30"
                    Margin="5"
                    Padding="5"
                    Click="AddSpecObjectButton_Click"
                    DockPanel.Dock="Left">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource PlusIcon}" Margin="0,0,5,0"/>
                    <TextBlock Text="{DynamicResource addAttribute}"/>
                </StackPanel>
            </Button>
            <Button x:Name="SaveSpecObject_Button"
                    Content="{DynamicResource save}"
                    Height="30"
                    Margin="5"
                    Padding="5"
                    Click="SaveSpecObject_Button_Click"
                    IsDefault="True"
                    DockPanel.Dock="Right"/>
            <Button x:Name="CancelSpecObject_Button"
                    Content="{DynamicResource cancel}"
                    Height="30"
                    Margin="5"
                    Padding="5"
                    Click="CancelSpecObjectButton_Click"
                    IsCancel="True"
                    DockPanel.Dock="Right"/>

        </DockPanel>

    </Grid>
</Window>
